{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getFilm","title","a","url","fetch","then","response","json","data","FindMovie","addMovie","useState","query","setQuery","foundMovie","setFoundMovie","error","setError","findMovie","useCallback","Error","onSubmit","event","preventDefault","htmlFor","type","value","id","placeholder","classNames","onChange","target","onClick","disabled","length","App","setMovies","alert","find","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0e7d4da.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <>\n      {movie && (\n        <div className=\"card\">\n          <div className=\"card-image\" data-cy=\"card-image\">\n\n            <figure className=\"image is-4by3\">\n              <img\n                src={movie.Poster}\n                alt=\"Film logo\"\n              />\n            </figure>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <figure className=\"image is-48x48\">\n                  <img\n                    src=\"images/imdb-logo.jpeg\"\n                    alt=\"imdb\"\n                  />\n                </figure>\n              </div>\n              <div className=\"media-content\">\n                <p\n                  className=\"title is-8\"\n                  data-cy=\"movie-title\"\n                >\n                  {movie.Title}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"content\" data-cy=\"content\">\n              {movie.Plot}\n              <br />\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=cdb6ba9a&t=';\n\nconst getData = (url: string) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => response.json());\n};\n\nexport const getFilm = async (title: string) => {\n  const data = await getData(title);\n\n  return data;\n};\n","import React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getFilm } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: CallableFunction,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState<string>('');\n\n  const findMovie = useCallback(async (title: string) => {\n    const data = await getFilm(title);\n\n    if (data.Error) {\n      setError('Can\\'t find a movie with such a title');\n      setFoundMovie(null);\n    } else {\n      setFoundMovie(data);\n      setError('');\n    }\n  }, [query]);\n\n  const handleSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (!error) {\n      addMovie(foundMovie);\n      setQuery('');\n      setFoundMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              value={query}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'input is-danger': error,\n              })}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setError('');\n              }}\n            />\n          </div>\n          {error\n            && (\n              <p className=\"help is-danger\">\n                {error}\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"find\"\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => findMovie(query)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              data-cy=\"add\"\n              type=\"submit\"\n              className=\"button is-primary\"\n              disabled={error.length > 0 || query.length === 0}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {foundMovie !== null\n        && (\n          <div className=\"container\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={foundMovie} />\n          </div>\n        )}\n    </>\n  );\n};\n","/* eslint-disable no-alert */\nimport React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback(async (movie: Movie) => {\n    if (movie === null) {\n      alert('Please, find the movie title first');\n    } else if (movies.find(item => movie.imdbID === item.imdbID)) {\n      alert('Movie already exists');\n    } else {\n      setMovies([...movies, movie]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}